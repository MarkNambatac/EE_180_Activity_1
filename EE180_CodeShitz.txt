#include <avr/io.h>


int main(void)
{
 
  uint8_t ADClow ;
  uint16_t ADCValue, ADChigh, FINAL;
  int FINALHIGH;

  ADCinitializations();
  UARTinitializations();
  DDRD = 0x4; /*0b00000100*/
 
  while(1)
  {
    while (ADCSRA & (1<<ADSC));
    ADCSRA |= (1<<ADSC);
    ADClow = ADCL;
    ADChigh = (ADCH<<8);
    ADCValue = ADClow | ADChigh; 
    FINAL = ADCValue >> 2; 
  
  int  resistance = (10000/255) * FINAL;
  

   if ((resistance > 4000) && (resistance <7000))
      {
     
          PORTD = 0x4;
     
       } 
       
   else
       {
          
     while(!(UCSR0A & 0b00100000)); //Wait until data register is empty
     UDR0 = FINAL;
          PORTD = 0x0;
       }
  }
}

 
void UARTinitializations(void)
 {
  UCSR0B = (1<< TXEN0) | (1<<RXEN0); 
  UCSR0C = (1<<UCSZ01) | (1<<UCSZ00);
 }

void ADCinitializations (void)
 {
  ADMUX = (1<<REFS0)| (1<<MUX1)| (1<< MUX0);
  ADCSRA = (1<<ADEN)| (1<<ADPS2) | (1<<ADPS1)| (1<<ADPS0);
  DIDR0 = (1<<ADC3D);
 
 }
